varnishtest "throttle vmod tracking too many calls test"

server s1 {
       rxreq
       txresp
} -start

varnish v1 -vcl+backend {
	import throttle from "${vmod_topbuild}/src/.libs/libvmod_throttle.so";

	sub vcl_recv {
	}

	sub vcl_deliver {
		set resp.http.x-key-one = throttle.is_allowed_with_time("key", "2req/1s", 3.0);
		set resp.http.x-key-one-call-list-size = throttle.calls("key");
		set resp.http.x-key-one-win-list-size = throttle.calls_for_rate_limit("key", "2req/1s");

		set resp.http.x-key-two = throttle.is_allowed_with_time("key", "2req/1s", 3.0);
		set resp.http.x-key-two-call-list-size = throttle.calls("key");
		set resp.http.x-key-two-win-list-size = throttle.calls_for_rate_limit("key", "2req/1s");

		# Third item is rejected (3 calls over 1 second)
		set resp.http.x-key-three = throttle.is_allowed_with_time("key", "2req/1s", 3.0);
		set resp.http.x-key-three-call-list-size = throttle.calls("key");
		set resp.http.x-key-three-win-list-size = throttle.calls_for_rate_limit("key", "2req/1s");

		# Fourth item is accepted (new time period)
		set resp.http.x-key-four = throttle.is_allowed_with_time("key", "2req/1s", 4.0);
		set resp.http.x-key-four-call-list-size = throttle.calls("key");
		set resp.http.x-key-four-win-list-size = throttle.calls_for_rate_limit("key", "2req/1s");

		# Fifth item is accepted (2 calls over 1 second)
		set resp.http.x-key-five = throttle.is_allowed_with_time("key", "2req/1s", 4.5);
		set resp.http.x-key-five-call-list-size = throttle.calls("key");
		set resp.http.x-key-five-win-list-size = throttle.calls_for_rate_limit("key", "2req/1s");

		# Sixth item is accepted (2 calls over 1 second)
		set resp.http.x-key-six = throttle.is_allowed_with_time("key", "2req/1s", 5.0);
		set resp.http.x-key-six-call-list-size = throttle.calls("key");
		set resp.http.x-key-six-win-list-size = throttle.calls_for_rate_limit("key", "2req/1s");
	}
} -start

client c1 {
	txreq -url "/"
	rxresp
	expect resp.http.x-key-one == 0.000
	expect resp.http.x-key-one-call-list-size == 1
	expect resp.http.x-key-one-win-list-size == 1

	expect resp.http.x-key-two == 0.000
	expect resp.http.x-key-two-call-list-size == 2
	expect resp.http.x-key-two-win-list-size == 2

	expect resp.http.x-key-three == 1.000
	expect resp.http.x-key-three-call-list-size == 2
	expect resp.http.x-key-three-win-list-size == 2

	expect resp.http.x-key-four == 0.000
	expect resp.http.x-key-four-call-list-size == 1
	expect resp.http.x-key-four-win-list-size == 1

	expect resp.http.x-key-five == 0.000
	expect resp.http.x-key-five-call-list-size == 2
	expect resp.http.x-key-five-win-list-size == 2

	expect resp.http.x-key-six == 0.000
	expect resp.http.x-key-six-call-list-size == 2
	expect resp.http.x-key-six-win-list-size == 2
}

client c1 -run
